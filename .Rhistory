data <- read.xlsx('/Users/sventhies/OneDrive - Traum-Ferienwohnungen GmbH/Privat/Julie/Datensatz Übungszwecke.xlsx')
View(data)
data_subset <- data %>%
select(ValueofTransactionmil,
s2un,
s3un,
agree2un,
agree3un,
ED,
DD,
year,
ccode,
T_Nation,
T_NationNEW,
AcqNation,
Acq_NationNEW,
Premium1daypriortoannounceday)
# Import libraries
library(openxlsx)
library(tidyverse)
library(reshape2)
library(tfwcolors)
library(knitr)
library(kableExtra)
data_subset <- data %>%
select(ValueofTransactionmil,
s2un,
s3un,
agree2un,
agree3un,
ED,
DD,
year,
ccode,
T_Nation,
T_NationNEW,
AcqNation,
Acq_NationNEW,
Premium1daypriortoannounceday)
library(mosaic)
inspect(data_subset)
help(filter)
data_subset <- data_subset %>%
filter(any_vars(!is.na(.)))
data_subset <- data_subset %>%
filter(any_vars(is.na(.)))
data_subset <- data_subset %>%
filter(!is.na(s2un))
inspect(data_subset)
data_subset <- data_subset %>%
mutate(year = as.character(year)))
data_subset <- data_subset %>%
mutate(year = as.character(year))
inspect(data_subset)
data_subset %>%
11^2
11^2
12^2
data_subset %>% group_by(ccode) %>% summarise(n = n())
data_subset %>% group_by(T_Nation) %>% summarise(n = n())
data_subset %>% group_by(T_Nation,T_NationNEW) %>% summarise(n = n())
```{r}
data_subset %>%
group_by(T_Nation,T_NationNEW) %>%
summarise(n = n())
data_subset %>%
group_by(year) %>%
summarise(n = n())
tmp <- data_subset %>%
group_by(year) %>%
summarise(n = n())
View(tmp)
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ggplot(., aes(x = year, y = n)) +
geom_line()
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ungroup() %>%
ggplot(., aes(x = as.Date(year), y = n)) +
geom_line()
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ungroup() %>%
ggplot(., aes(x = year, y = n)) +
geom_line()
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ungroup() %>%
ggplot(., aes(x = as.factor(year), y = n)) +
geom_line()
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ungroup() %>%
ggplot(., aes(x = year, y = n)) +
geom_bar()
data_subset %>%
group_by(year) %>%
summarise(n = n()) %>%
ungroup() %>%
ggplot(., aes(x = year, y = n)) +
geom_bar(stat = "identity")
data_subset %>%
group_by(year) %>%
summarise(anzahl_beobachtungen = n()) %>%
ungroup() %>%
ggplot(., aes(x = year, y = anzahl_beobachtungen)) +
geom_bar(stat = "identity") +
theme_bw()
inspect(data_subset) %>%
kable(., format.args = list(big.mark = ".")) %>%
kable_styling(font_size = 12,
bootstrap_options = c("striped", "hover", "condensed"))
as.data.frame(inspect(data_subset)) %>%
kable(., format.args = list(big.mark = ".")) %>%
kable_styling(font_size = 12,
bootstrap_options = c("striped", "hover", "condensed"))
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram() +
theme_bw()
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,500)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>% filter(is.infinite(ValueofTransactionmil))
)
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,100)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = log(ValueofTransactionmil))) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = log(ValueofTransactionmil))) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
#scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = log(ValueofTransactionmil))) +
geom_histogram(color = "black", fill = "white") +
#scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
s
data_subset %>%
ggplot(., aes(x = ValueofTransactionmil)) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = Premium1daypriortoannounceday)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = Premium1daypriortoannounceday)) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = log(Premium1daypriortoannounceday))) +
geom_histogram(binwidth = 50, color = "black", fill = "white") +
scale_x_continuous(limits = c(-1,5001), breaks = seq(0,5000,200)) +
theme_bw()
data_subset %>%
ggplot(., aes(x = log(Premium1daypriortoannounceday))) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = DD)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = s2un)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = s3un)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree2un)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree3un)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
View(data_subset)
data_subset %>%
ggplot(., aes(x = DD)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = ED)) +
geom_histogram(color = "black", fill = "white") +
theme_bw()
data_subset %>%
ggplot(., aes(x = s2un, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = s3un, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree2un, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree3un, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = DD, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = ED, y = log(ValueofTransactionmil))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = s2un, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = s3un, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree2un, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = agree3un, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = DD, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
data_subset %>%
ggplot(., aes(x = ED, y = log(Premium1daypriortoannounceday))) +
geom_point() +
theme_bw()
pairs(data_subset %>% select(ED,DD,s2un))
pairs(data_subset %>% select(ED,DD,s2un,s3sun,agree2un,agree3un))
pairs(data_subset %>% select(ED,DD,s2un,s3un,agree2un,agree3un))
tmp <- data_subset %>%
filter(T_Nation == 'Brazil')
View(tmp)
data %>% filter(T_Nation == 'Brazil')
tmp_view <- data %>% filter(T_Nation == 'Brazil')
View(tmp_view)
# Required packages
require(RMySQL)
require(dplyr)
require(data.table)
require(keyringr)
# Verbindung herstellen
con <- dbConnect(MySQL(),
user="s.thies",
password=decrypt_kc_pw("db_data_service"),
host="10.240.0.19",
dbname="data_service"
)
# Querien und in df laden
df <- dbGetQuery(con,
paste(" SELECT tbl_comm.listing_id,
date_format(tbl_comm.datetime, '%Y-%m-%d') AS dateymd,
tbl_comm.num_messages,
IFNULL(tbl_inquiry.category,'Rückfrage') AS category,
tbl_rlh.binding_inquiry,
tbl_comm.text
FROM (
SELECT  c.listing_id,
c.datetime,
tbl.num_messages,
h.text
FROM communication.ws_communication AS c
JOIN communication.ws_history AS h ON c.id = h.communication_id
AND date_format(c.datetime, '%Y-%m-01') BETWEEN '2018-03-01' AND '2018-09-13'
JOIN (
SELECT  MIN(h.id) AS id,
COUNT(h.id) AS num_messages
FROM communication.ws_communication AS c
JOIN communication.ws_history AS h ON c.id = h.communication_id
AND date_format(c.datetime, '%Y-%m-01') BETWEEN '2018-03-01' AND '2018-09-13'
GROUP BY c.listing_id,h.communication_id) AS tbl
ON h.id = tbl.id
) AS tbl_comm
LEFT JOIN (
SELECT listing_id,
created_date,
category
FROM data_service.raw__inquiry
) AS tbl_inquiry
ON tbl_comm.listing_id = tbl_inquiry.listing_id AND date_format(tbl_comm.datetime, '%Y-%m-%d') = tbl_inquiry.created_date
LEFT JOIN (
SELECT  listing_id,
date_from,
date_to,
binding_inquiry
FROM data_service.raw__listing__history
) AS tbl_rlh
ON tbl_comm.listing_id = tbl_rlh.listing_id AND date_format(tbl_comm.datetime, '%Y-%m-%d') BETWEEN tbl_rlh.date_from AND date_format(IFNULL(tbl_rlh.date_to,NOW()), '%Y-%m-%d')
WHERE tbl_rlh.binding_inquiry = 'inactive'
;"))
# Verbindung trennen
dbDisconnect(con)
# Speichern
fwrite(df,"/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_rare_non_binding.csv")
library(data.table)
data_rare <- fread(df,"/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_rare_non_binding.csv")
data_rare <- fread("/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_rare_non_binding.csv")
data_Anfrage <- data %>%
filter(label == 'Rückfrage') %>%
mutate(text_has_date = grepl("DATUM",text),
text_has_booking_keyword = grepl("buchen|mieten",text),
text_has_price_request = grepl("teuer|preis",text))
# Required packages
require(data.table)
require(tidyverse)
require(cld3)
# Laden
data <- fread("/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_rare_non_binding.csv")
# Replace datapoints with automatically generated text
data2 <- data %>%
filter(text != "Der Urlaubsgast hat keine Nachricht verfasst.",
text != "BOOKED",
text != "DECLINED",
text != "EXPIRED",
text != "CANCELED",
text != "Test Text",
text != "Test",
text != "test",
text != "Test Buchung",
text != "xxx",
text != ":)",
text != "")
# Replace Category by label
data3 <- data2 %>%
mutate(label = ifelse(category == "Rückfrage","Rückfrage","Anfrage")) %>%
select(label, text)
# Remove Umbrüche, e.g. \n\r
data4 <- data3 %>%
mutate(text = gsub("[\n\r]", " " , text))
# Remove all signs
data5 <- data4 %>%
mutate(text = gsub("[[:punct:]]", "" , text))
# Remove observations with any "test"
data6 <- filter(data5, !grepl("test",text))
# Only german texts
language_detection <- detect_language(data6$text)
data7 <- data6[ifelse(is.na(language_detection=="de"),FALSE,TRUE),]
# Remove all double or tripple spaces to only one
data8 <- data7 %>%
mutate(text = gsub("\\s+", " ", str_trim(text)))
# Add structure to the data by abstraction
dogs <- read.csv("/Users/sventhies/filestorage/analytics_general_inquiry_classification/dogs.csv")
data9 <- data8 %>%
mutate(text = gsub("01[0-9]{9,11}", "HANDYNUMMER" , text),
text = gsub("[0-9]{4,8}", "DATUM" , text),
text = gsub("[0-9]{1,3}", "ZAHL" , text),
text = gsub(paste(dogs$dogs, collapse = "|") , "HUND" , text),
text = gsub(paste(c("o g","og","oben genannt","obengenannt","oben genannten","oben","oben angegeben","obenangegeben","oben angegebenen","obenangegebenen"),collapse = "|") , "og" , text))
# Speichern
fwrite(data9,"/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_transformed_non_binding.csv")
library(data.table)
data <- fread("/Users/sventhies/filestorage/analytics_general_inquiry_classification/data_transformed_non_binding.csv")
data_Anfrage <- data %>%
filter(label == 'Rückfrage') %>%
mutate(text_has_date = grepl("DATUM",text),
text_has_booking_keyword = grepl("buchen|mieten",text),
text_has_price_request = grepl("teuer|preis",text))
View(data_Anfrage)
data_Anfrage %>%
group_by(ifelse(text_has_date==TRUE & text_has_booking_keyword==TRUE,TRUE,FALSE)) %>%
summarize(n = n())
data_Anfrage %>%
group_by(ifelse(text_has_date==TRUE,TRUE,FALSE)) %>%
summarize(n = n())
18336/(13433+18336)
3954 / (27815+3954)
data_Anfrage <- data %>%
filter(label == 'Rückfrage') %>%
mutate(text_has_date = grepl("DATUM",text),
text_has_booking_keyword = grepl("buchen|mieten",text),
text_has_price_request = grepl("teuer|preis",text),
text_has_handynr = grepl("HANDYNUMMER",text),)
data_Anfrage <- data %>%
filter(label == 'Rückfrage') %>%
mutate(text_has_date = grepl("DATUM",text),
text_has_booking_keyword = grepl("buchen|mieten",text),
text_has_price_request = grepl("teuer|preis",text),
text_has_handynr = grepl("HANDYNUMMER",text))
data_Anfrage %>%
group_by(ifelse(text_has_handynr==TRUE,TRUE,FALSE)) %>%
summarize(n = n())
1310/(1310+30459)
help(xgboost)
library(xgboost)
library(xgboost)
help(xgboost)
help(xgboost)
help("xgb.DMatrix")
library(mosaic)
data(Alchol)
data(Alcohol)
View(Alcohol)
data <- read.csv("/Users/sventhies/OneDrive - Traum-Ferienwohnungen GmbH/Privat/Sven/FOM/R-Training/Daten_Allbus/allbus.csv")
View(data)
data <- read.csv2("/Users/sventhies/OneDrive - Traum-Ferienwohnungen GmbH/Privat/Sven/FOM/R-Training/Daten_Allbus/allbus.csv")
View(data)
setwd("/Users/sventhies/OneDrive - Traum-Ferienwohnungen GmbH/Privat/Sven/FOM/R-Training")
data <- read.csv2("/Daten_Allbus/allbus.csv")
data <- read.csv2("Daten_Allbus/allbus.csv")
data_subset <- data %>%
select(respid,
yborn,
age,
ep03,
ep04)
View(data_subset)
library(mosaic)
inspect(data_subset)
data_subset_clean <- data_subset %>%
filter(!is.na(yborn),
!is.na(age),
!is.na(ep03),
!is.na(ep04))
data_subset_clean2 <- data_subset %>%
filter(all_vars(is.na(.)))
help(filter)
data_subset_clean2 <- data_subset %>%
filter_all(any_vars(is.na(.)))
data_subset_clean <- data_subset %>%
filter(!is.na(yborn),
!is.na(age),
!is.na(ep03),
!is.na(ep04))
data_subset_clean2 <- data_subset %>%
filter_all(!any_vars(is.na(.)))
data_subset_clean2 <- data_subset %>%
filter_all(any_vars(!is.na(.)))
View(data_subset_clean)
inspect(data_subset)
inspect(data_subset_clean)
# Laden der Umgebung
library(mosaic)
# 1. Datensatz downloaden
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
# 2. Datensatz einlesen
tips <- read.csv2("tips.csv")
# 3. Manipulation von Daten
# -> Nur interessierende Variablen
tips <- tips %>%
select(total_bill, tip, sex)
inspect(tips)
histogram(~ total_bill, data = tips)
histogram(~ tip, data = tips)
xyplot(tip ~ total_bill, data = tips)
bargraph(~ sex, data = tips)
histogram(~ total_bill | sex, data = tips)
histogram(~ tip | sex, data = tips)
bwplot(tip ~ sex, data = tips)
help(bwplot)
t.test(~ total_bill | sex, data = tips)
t.test(~ tip | sex, data = tips)
reg_res <- lm(tip ~ total_bill, data = tips)
summary(reg_res)
plotModel(reg_res)
help("cor.test")
cor.test(tip ~ total_bill, data = tips)
reg_res3 <- lm(tip ~ total_bill + sex, data = tips)
summary(reg_res3)
plotModel(reg_res3)
reg_res3 <- lm(tip ~ total_bill + sex + total_bill:sex, data = tips)
summary(reg_res3)
plotModel(reg_res3)
summary(reg_res3)
t.test(~ total_bill | sex, data = tips)
t.test(~ total_bill | sex, data = tips)
t.test(~ tip | sex, data = tips)
cor.test(tip ~ total_bill, data = tips)
reg_res <- lm(tip ~ total_bill, data = tips)
summary(reg_res)
plotModel(reg_res)
