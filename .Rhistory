Inquiries_booking = ifelse(is.na(Inquiries_booking),0,Inquiries_booking),
Expose_views_binding = ifelse(is.na(Expose_views_binding),0,Expose_views_binding),
Expose_views_booking = ifelse(is.na(Expose_views_binding),0,Expose_views_binding)) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(score = ~scale(.,center = FALSE, scale = TRUE))) %>%
mutate(total_score = 10*Inquiries_non_binding_score+10*Inquiries_binding_score
+5*Expose_views_non_binding_score+5*Expose_views_binding_score
+3*TFW_SEL_searches_per_obj_score
+1*google_searchidx_score)
data_scoring <- data %>%
mutate(#Inquiries_binding = ifelse(is.na(Inquiries_binding),0,Inquiries_binding),
Inquiries_booking = ifelse(is.na(Inquiries_booking),0,Inquiries_booking),
#Expose_views_binding = ifelse(is.na(Expose_views_binding),0,Expose_views_binding),
#Expose_views_booking = ifelse(is.na(Expose_views_binding),0,Expose_views_binding)
) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(score = ~scale(.,center = FALSE, scale = TRUE))) %>%
mutate(total_score = 10*Inquiries_non_binding_score+10*Inquiries_binding_score
+5*Expose_views_non_binding_score+5*Expose_views_binding_score
+3*TFW_SEL_searches_per_obj_score
+1*google_searchidx_score)
data_scoring <- data %>%
mutate(#Inquiries_binding = ifelse(is.na(Inquiries_binding),0,Inquiries_binding),
Inquiries_booking = ifelse(is.na(Inquiries_booking),0,Inquiries_booking)
#Expose_views_binding = ifelse(is.na(Expose_views_binding),0,Expose_views_binding),
#Expose_views_booking = ifelse(is.na(Expose_views_binding),0,Expose_views_binding)
) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(score = ~scale(.,center = FALSE, scale = TRUE))) %>%
mutate(total_score = 10*Inquiries_non_binding_score+10*Inquiries_binding_score
+5*Expose_views_non_binding_score+5*Expose_views_binding_score
+3*TFW_SEL_searches_per_obj_score
+1*google_searchidx_score)
data_scoring_year <- data_scoring %>%
filter(dateym <= '2018-12-31') %>%
group_by(country,
market,
organization,
year = year(dateym)) %>%
summarise_all(mean) %>%
ungroup() %>%
select(-dateym)
View(data_scoring_year)
data_scoring_year <- data_scoring %>%
filter(dateym <= '2018-12-31') %>%
group_by(country,
market,
organization,
year = year(dateym)) %>%
summarise_all(mean,na.rm=TRUE) %>%
ungroup() %>%
select(-dateym)
data_scoring <- data %>%
mutate(Inquiries_binding = ifelse(is.na(Inquiries_binding),0,Inquiries_binding),
Inquiries_booking = ifelse(is.na(Inquiries_booking),0,Inquiries_booking),
Expose_views_binding = ifelse(is.na(Expose_views_binding),0,Expose_views_binding),
Expose_views_booking = ifelse(is.na(Expose_views_binding),0,Expose_views_binding)) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(score = ~scale(.,center = FALSE, scale = TRUE))) %>%
mutate(total_score = 10*Inquiries_non_binding_score+10*Inquiries_binding_score
+5*Expose_views_non_binding_score+5*Expose_views_binding_score
+3*TFW_SEL_searches_per_obj_score
+1*google_searchidx_score)
data_scoring_year <- data_scoring %>%
filter(dateym <= '2018-12-31') %>%
group_by(country,
market,
organization,
year = year(dateym)) %>%
summarise_all(mean,na.rm=TRUE) %>%
ungroup() %>%
select(-dateym)
data_scoring <- data_scoring %>%
group_by(dateym) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(rank = ~rank(-.,ties.method = c("max")))) %>%
mutate(total_rank = rank(-total_score,ties.method = c("max"))) %>%
ungroup()
data_scoring_year <- data_scoring_year %>%
group_by(year,
country) %>%
mutate_at(c("Expose_views_non_binding", "Expose_views_binding","Expose_views_booking",
"Inquiries_non_binding","Inquiries_binding","Inquiries_booking",
"TFW_SEL_searches","TFW_SEL_searches_per_obj",
"google_searchidx"),
.funs = list(rank = ~rank(-.,ties.method = c("max")))) %>%
mutate(total_rank = rank(-total_score,ties.method = c("max"))) %>%
ungroup()
ranking_names <- c('market','total_rank','Inquiries_non_binding_rank','Inquiries_binding_rank','Inquiries_booking_rank','Expose_views_non_binding_rank','Expose_views_binding_rank','Expose_views_booking_rank','TFW_SEL_searches_per_obj_rank','google_searchidx_rank')
score_names <- c('market','Inquiries_non_binding_score','Inquiries_binding_score','Inquiries_booking_score','Expose_views_non_binding_score','Expose_views_binding_score','Expose_views_booking_score','TFW_SEL_searches_per_obj_score','google_searchidx_score')
data_scoring_year %>%
filter(country == 'Frankreich') %>%
ggplot(., aes(x = reorder(market,total_score), y = total_score)) +
geom_bar(stat = 'identity', fill = tfw_cols('yellow'), color = 'white') +
xlab('Nordsee Kernmärkte') +
ylab('Gesamtscore 2018') +
theme_bw() +
coord_flip()
data_scoring_year %>%
filter(country == 'Frankreich') %>%
ggplot(., aes(x = reorder(market,total_score), y = total_score)) +
geom_bar(stat = 'identity', fill = tfw_cols('orange'), color = 'white') +
xlab('Nordsee Kernmärkte') +
ylab('Gesamtscore 2018') +
theme_bw() +
coord_flip()
data_scoring_year %>%
filter(country == 'Frankreich') %>%
ggplot(., aes(x = reorder(market,total_score), y = total_score)) +
geom_bar(stat = 'identity', fill = tfw_cols('orange'), color = 'white') +
xlab('Frankreich Kernmärkte') +
ylab('Gesamtscore 2018') +
theme_bw() +
coord_flip()
View(data)
# Import libraries
library(data.table)
library(tidyverse)
library(reshape2)
library(mosaic)
library(zoo)
# Script purpose:
# - clean data seperately
# - merge dynamic and static data (keep only online listings)
# Import data
data_orig <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_orig.csv")
data_1 <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_1.csv")
data_2 <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_2.csv")
View(data_orig)
data_marketieSdemand <- data_1 %>%
group_by(market = url_place_last,
country) %>%
summarise(url_count = sum(url_count)) %>%
ungroup() %>%
filter(market != '')
data_marketieSdemand2 <- data_orig %>%
group_by(market = url_place_last,
country) %>%
summarise(url_count = sum(url_count)) %>%
ungroup() %>%
filter(market != '')
View(data_marketieSdemand)
View(data_marketieSdemand2)
data_vacationmonth <- data_orig %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count))
fwrite(data_orig,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_orig.csv")
fwrite(data_1,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_1.csv")
fwrite(data_2,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_2.csv")
data_marketieSdemand2 <- data_orig %>%
group_by(market = url_place_last,
country) %>%
summarise(url_count = sum(url_count)) %>%
ungroup() %>%
filter(market != '')
View(data_marketieSdemand2)
data_vacationmonth <- data_orig %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count))
# Import data
data_orig <- fread("/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_orig.csv")
data_1 <- fread("/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_1.csv")
data_2 <- fread("/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_2.csv")
data_planningmonth <- data_orig %>%
group_by(dateym) %>%
summarise(url_count = sum(url_count))
data_vacationmonth <- data_orig %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count))
# Import libraries
library(data.table)
library(tidyverse)
library(reshape2)
library(mosaic)
library(zoo)
# Script purpose:
# - clean data seperately
# - merge dynamic and static data (keep only online listings)
# Import data
data_orig <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_orig.csv")
data_1 <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_1.csv")
data_2 <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/resultlist_data_2.csv")
data_orig <- data_orig %>%
mutate(planning_period = (as.yearmon(vacation_start)-as.yearmon(dateym))*12,
vacation_start_month = as.character(paste(year(vacation_start),month(vacation_start),"01",sep="-")))
# Clean data
print("Clean data ... ")
data_orig <- data_orig %>%
filter(vacation_start >= dateym,
vacation_end > vacation_start,
vacation_end <= '2025-12-31',
!url_place_last %in% c('fruehbucher','kurzurlaub'),
planning_period <= 2500)
data_1 <- data_1 %>%
filter(vacation_start >= dateym,
vacation_end > vacation_start,
vacation_end <= '2025-12-31',
!url_place_last %in% c('fruehbucher','kurzurlaub'))
data_2 <- data_2 %>%
filter(vacation_start >= dateym,
vacation_end > vacation_start,
vacation_end <= '2025-12-31',
!market %in% c('fruehbucher','kurzurlaub'))
# Save data
fwrite(data_orig,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_orig.csv")
fwrite(data_1,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_1.csv")
fwrite(data_2,"/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_2.csv")
write_feather(data_orig,"/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/data_resultlist.feather")
library(feather)
write_feather(data_orig,"/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/data_resultlist.feather")
shiny::runApp('shiny-server/src/apps/Market-Intelligence-Tool')
# Load resultlist data
data_resultlist <<- read_feather("/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/data_resultlist.feather")
data_sub_resultlist <- data_resultlist %>%
filter(url_place_last == "norderney") %>%
group_by(dateym) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
View(data_sub_resultlist)
tmp_view <- data_resultlist %>%
distinct(url_place_last) %>%
pull(url_place_last)
p1 <-  plot_ly(data=data_sub_resultlist(), x = ~as.Date(dateym), y = ~url_count, name = "Anzahl Suchen", type = 'scatter', mode = 'lines+markers',line = list(color = 'rgba(100,182,231,0.6)', width = 4, dash = 'solid'), marker = list(size = 13,color = 'rgba(100,182,231,1)')) %>%
layout(xaxis = list(showgrid = FALSE,
title = ""),
yaxis = list(title = "",
showgrid = TRUE,
rangemode = "tozero",
tickformat = "%"),
legend = list(x=0,y=150,
orientation="h"),
showlegend = TRUE
) %>%
config(displayModeBar = F)
p1 <-  plot_ly(data=data_sub_resultlist, x = ~as.Date(dateym), y = ~url_count, name = "Anzahl Suchen", type = 'scatter', mode = 'lines+markers',line = list(color = 'rgba(100,182,231,0.6)', width = 4, dash = 'solid'), marker = list(size = 13,color = 'rgba(100,182,231,1)')) %>%
layout(xaxis = list(showgrid = FALSE,
title = ""),
yaxis = list(title = "",
showgrid = TRUE,
rangemode = "tozero",
tickformat = "%"),
legend = list(x=0,y=150,
orientation="h"),
showlegend = TRUE
) %>%
config(displayModeBar = F)
p1
runApp('shiny-server/src/apps/Market-Intelligence-Tool')
runApp('shiny-server/src/apps/Market-Intelligence-Tool')
dates_resultlist <- data_resultlist %>%
distinct(dateym)
dates_resultlist
dates_resultlist[1]
dates_resultlist[1,1]
dates_resultlist <- data_resultlist %>%
distinct(dateym) %>%
pull(dateym)
dates_resultlist[1]
runApp('shiny-server/src/apps/Market-Intelligence-Tool')
# Load resultlist data
data_resultlist <<- read_feather("/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/data_resultlist.feather")
dates_resultlist <- data_resultlist %>%
distinct(dateym) %>%
pull(dateym)
dates_resultlist
dates_resultlist[1]
list_of_resultlist_keywords <- data_resultlist %>%
distinct(url_place_last) %>%
pull(url_place_last)
runApp('shiny-server/src/apps/Market-Intelligence-Tool')
View(data_resultlist)
data_sub_resultlist <-  data_resultlist %>%
filter(url_place_last == "norderney") %>%
group_by(dateym) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
View(data_sub_resultlist)
data_sub_resultlist_vacation <- data_orig %>%
filter(dateym == "2018-03-01",
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
data_sub_resultlist_vacation <- data_resultlist %>%
filter(dateym == "2018-03-01",
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
View(data_sub_resultlist_vacation)
runApp('shiny-server/src/apps/Market-Intelligence-Tool')
View(data_sub_resultlist_vacation)
data_sub_resultlist_vacation <- data_resultlist %>%
filter(dateym == "2018-03-01",
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup() %>%
mutate(dateym = as.Date(dateym))
data_sub_resultlist_vacation <- data_resultlist %>%
filter(dateym == "2018-03-01",
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup() %>%
mutate(vacation_start_month = as.Date(vacation_start_month))
View(data_sub_resultlist_vacation)
plot_ly(data=data_sub_resultlist_vacation, x = ~as.Date(vacation_start_month), y = ~url_count, name = "Anzahl Suchen", type = 'scatter', mode = 'lines+markers',line = list(color = 'rgba(100,182,231,0.6)', width = 4, dash = 'solid'), marker = list(size = 13,color = 'rgba(100,182,231,1)')) %>%
layout(xaxis = list(showgrid = FALSE,
title = ""),
yaxis = list(title = "",
showgrid = TRUE,
rangemode = "tozero"),
legend = list(x=0,y=150,
orientation="h"),
showlegend = TRUE
) %>%
config(displayModeBar = F)
data_sub_resultlist_vacation
data_resultlist %>%
filter(dateym == input$resultlist_month,
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
data_sub_resultlist_vacation <- data_resultlist %>%
filter(dateym == "2018-03-01",
vacation_start_month < '2020-01-01') %>%
group_by(vacation_start_month) %>%
summarise(url_count = sum(url_count)) %>%
ungroup()
plot_ly(data=data_sub_resultlist_vacation, x = ~as.Date(vacation_start_month), y = ~url_count, name = "Anzahl Suchen", type = 'scatter', mode = 'lines+markers',line = list(color = 'rgba(100,182,231,0.6)', width = 4, dash = 'solid'), marker = list(size = 13,color = 'rgba(100,182,231,1)'))
plot_ly(data=data_sub_resultlist_vacation(), x = ~as.Date(vacation_start_month), y = ~url_count)
plot_ly(data=data_sub_resultlist_vacation, x = ~as.Date(vacation_start_month), y = ~url_count)
plot_ly(data=data_sub_resultlist_vacation, x = ~as.Date(vacation_start_month), y = ~url_count, name = "Anzahl Suchen",  type = 'bar', marker = list(color = 'rgba(100,182,231,1)')) %>%
layout(xaxis = list(showgrid = FALSE,
title = ""),
yaxis = list(title = "",
showgrid = TRUE,
rangemode = "tozero"),
legend = list(x=0,y=150,
orientation="h"),
showlegend = TRUE
) %>%
config(displayModeBar = F)
mod_I_data <<- read_feather("/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/dataset_MIT_modul_I.feather")
mod_I_data <<- read_feather("/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/dataset_MIT_modul_I.feather")
View(mod_I_data)
install.packages("gtrendsR")
library(data.table)
library(feather)
library(tidyverse)
data_views_inqs <- read_feather("/Users/sventhies/filestorage/market_explorer_MIT/gcloud_bucket/dataset_MIT_modul_I.feather") %>%
filter(month >= '2018-01-01',
organization == 'GA_und_PV',
booking_type != 'Alle') %>%
select(dateym = month, country, market = market_plain, organization, booking_type, count_objects, count_view_description_per_obj,count_non_binding_inquires_per_obj,count_binding_inquires_per_obj,count_bookings_per_obj) %>%
gather(variable, value, (count_objects:count_bookings_per_obj)) %>%
unite(temp, booking_type, variable) %>%
spread(temp, value) %>%
select(dateym, country, market, organization, Listings_Online_non_binding = `non binding inquiry_count_objects`, Listings_Online_binding = `binding inquiry_count_objects`, Listings_Online_booking = `booking_count_objects`,
Expose_views_non_binding = `non binding inquiry_count_view_description_per_obj`, Expose_views_binding = `binding inquiry_count_view_description_per_obj`, Expose_views_booking = `booking_count_view_description_per_obj`,
Inquiries_non_binding = `non binding inquiry_count_non_binding_inquires_per_obj`, Inquiries_binding =  `binding inquiry_count_binding_inquires_per_obj`, Inquiries_booking = `booking_count_bookings_per_obj`) %>%
mutate(Inquiries_non_binding  = ifelse(Listings_Online_non_binding < 10,NA,Inquiries_non_binding),
Inquiries_binding  = ifelse(Listings_Online_binding < 10,NA,Inquiries_binding),
Inquiries_booking  = ifelse(Listings_Online_booking < 10,NA,Inquiries_booking)) %>%
filter((Listings_Online_non_binding >= 10 | Listings_Online_binding >= 10),
market != 'Alle')
# ==========================================
# Step 2:
# Get data for every Market/Month combination:
# - searches
# ==========================================
data_searches <- fread("/Users/sventhies/market_equilibrium_tool/data/processed/resultlist_data_1.csv") %>%
group_by(dateym,url_place_last) %>%
summarise(TFW_SEL_searches = sum(url_count)) %>%
ungroup()
# ==========================================
# Step 3:
# Get mapping from title (Tree) to link (URL)
# Join data
# ==========================================
mapping <- fread("/Users/sventhies/market_equilibrium_tool/data/raw/mapping_region_title_to_link.csv") %>%
select(-id) %>%
distinct(title,link)
data <- data_views_inqs %>%
inner_join(mapping, by = c("market" = "title")) %>%
left_join(data_searches, by = c("link"="url_place_last","dateym"="dateym")) %>%
mutate(TFW_SEL_searches = ifelse(is.na(TFW_SEL_searches),0,TFW_SEL_searches),
TFW_SEL_searches_per_obj = TFW_SEL_searches/rowSums(.[5:7],na.rm = TRUE))
# ==========================================
# Step 4: (optional)
# Added Google Trends data to the existings markets
# ==========================================
source("/Users/sventhies/tfw_r_packages/fget_google_trends_data.R")
# Prepare keywords
data_keywords <- data %>%
distinct(market) %>%
mutate(keywords = gsub(" & Umgebung", "",market),
keywords = gsub("\\/.*", "",keywords),
keywords = gsub(" \\- .*", "",keywords)) %>%
select(market, keywords)
keywords <- data_keywords %>%
distinct(keywords) %>%
pull(keywords)
# Get data for keywords
gt_data <- fget_google_trends_data(keywords=keywords[1:4])
# Get data for keywords
gt_data <- fget_google_trends_data(keywords=keywords[1:5])
gt_data[[1]]
remove.packages("gtrendsR")
devtools::install_github("PMassicotte/gtrendsR")
getAnywhere(gtrends)
getAnywhere(interest_over_time)
getAnywhere(encode_keyword)
# Get data for keywords
gt_data <- fget_google_trends_data(keywords=keywords[1:5])
help(gsub)
Sys.getenv()
Sys.unsetenv(Sys.setenv("GCS_AUTH_FILE")
)
Sys.unsetenv('Sys.setenv("GCS_AUTH_FILE"')
Sys.getenv()
Sys.unsetenv('Sys.setenv("VLQ_ASSISTANT_DB_USER_PASS"')
Sys.getenv()
devtools::install_github('rstudio/shinyloadtest')
library("shinyloadtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(mosaic)
help(bargraph)
help(select)
glm
help(glm)
glm(y~x, family=binomial())
help("t.test")
install.packages("mosaic")
library(mosaic)
detach(mosaic.getOption())
detach(package::mosaic)
help(detach)
detach(package:mosaic)
require(mosaic)
data(Alcohol)
?Alcohol
View(Alcohol)
setwd("~/")
getwd
getwd()
setwd("/Users/sventhies/python_pkgs")
getwd
getwd()
getwd()
setwd("~/OneDrive - Traum-Ferienwohnungen GmbH/Privat/Sven/FOM/R-Training")
tips <- read.csv2("/D_Daten/tips.csv")
tips <- read.csv2("D_Daten/tips.csv")
View(tips)
tips <- read.csv("D_Daten/tips.csv")
inspect(tips)
bargraph(~ sex, data = tips)
bargraph(~ sex| time, data = tips)
histogram(~ total_bill, data = tips)
histogram(~ total_bill | sex, data = tips)
xyplot(tip~total_bill,  data=tips)
t.test( ~ total_bill, data=tips,
mu=15,  alternative="greater")
t.test( ~ total_bill, data=tips,
mu=19,  alternative="greater")
t.test( total_bill ~ smoker,data=tips )
reg_fit <- lm(tip ~ total_bill, data = tipy)
reg_fit <- lm(tip ~ total_bill, data = tips)
summary(reg_fit)
rmarkdown::render('Z_Rmarkdown/B0_Erste_Schritte.Rmd', output_file = '../B0_Erste_Schritte.pdf')
rmarkdown::render('Z_Rmarkdown/B1_Daten_einlesen.Rmd', output_file = '../B1_Daten_einlesen.pdf')
rmarkdown::render('Z_Rmarkdown/B2_Daten_aufbereiten.Rmd', output_file = '../B2_Daten_aufbereiten.pdf')
rmarkdown::render('Z_Rmarkdown/B3_Daten_explorieren.Rmd', output_file = '../B3_Daten_explorieren.pdf')
rmarkdown::render('Z_Rmarkdown/B4_Daten_modellieren.Rmd', output_file = '../B4_Daten_modellieren.pdf')
# Clean all unnecessary files after compiling
rules <- c('.log', '.vrb', '.nav', '.snm', '.toc',
'-tikzDictionary', '.tex', '.synctex.gz')
file.remove(list.files(pattern = paste0('\\',rules ,'$', collapse = '|')))
rmarkdown::render('Z_Rmarkdown/B0_Erste_Schritte.Rmd', output_file = '../B0_Erste_Schritte.pdf')
rmarkdown::render('Z_Rmarkdown/B1_Daten_einlesen.Rmd', output_file = '../B1_Daten_einlesen.pdf')
rmarkdown::render('Z_Rmarkdown/B2_Daten_aufbereiten.Rmd', output_file = '../B2_Daten_aufbereiten.pdf')
rmarkdown::render('Z_Rmarkdown/B3_Daten_explorieren.Rmd', output_file = '../B3_Daten_explorieren.pdf')
rmarkdown::render('Z_Rmarkdown/B4_Daten_modellieren.Rmd', output_file = '../B4_Daten_modellieren.pdf')
# Clean all unnecessary files after compiling
rules <- c('.log', '.vrb', '.nav', '.snm', '.toc',
'-tikzDictionary', '.synctex.gz')
file.remove(list.files(pattern = paste0('\\',rules ,'$', collapse = '|')))
getwd()
# Clean all unnecessary files after compiling
rules <- c('.log', '.vrb', '.nav', '.snm', '.toc',
'-tikzDictionary', '.synctex.gz')
file.remove(list.files(pattern = paste0('\\',rules ,'$', collapse = '|')))
# Clean all unnecessary files after compiling
rules <- c('.log', '.vrb', '.nav', '.snm', '.toc',
'-tikzDictionary', '.tex', '.synctex.gz')
file.remove(list.files(pattern = paste0('\\',rules ,'$', collapse = '|')))
